.TH dhcpy6d-clients.conf 5 "Jul 17, 2014" "Henri Wahl" "dhcpy6d-clients.conf"

.SH "NAME"
dhcpy6d-clients.conf \- clients configuration file for DHCPv6 server dhcpy6d

.SH "DESCRIPTION"
This file contains all client configuration data if these options are set in
.IR dhcpy6d.conf ":

.B store_config = file

and

.B store_file_config = /path/to/dhcpy6d-clients.conf

An alternative method to store client configuration is using database storage with SQLite or MySQL databases.
Further details are available at
.IR https://dhcpy6d.ifw\-dresden.de/documentation/config/.

This file follows RFC 822 style parsed by Python ConfigParser module.

Some options allow multiple values. These have to be separated by spaces.

.SH CLIENT SECTIONS

.TP
.BR [host_name]
Every client is configured in one section. It might have multiple attributes which are necessary depending on the
configured
.BR identification
and general address settings from
.IR dhcpy6d.conf ".

.SH CLIENT ATTRIBUTES
Every client section contains several attributes.
.BR hostname " and " class
are mandatory. A third one should match at least one of the identification attributes configured in
.IR dhcpy6d.conf ".


.SS MANDATORY CLIENT ATTRIBUTE class
Both of the following 2 attributes are necessary.

.TP
.BR class\ =\ <class>
Every client needs a class. If a client is identified, it depends from its class, which addresses it will get.
This relation is configured in
.IR dhcpy6d.conf ".

.SS SEMI-MANDATORY CLIENT ATTRIBUTES

Depending on
.B identification
in
.I dhcpy6d.conf
clients need to have the corresponding attributes. At least one of them is needed.

.TP
.B mac = <mac-address>
The MAC address of the Link Local Address of the client DHCPv6 request.

.TP
.B duid = <duid>
The DUID of the client which comes with the DHCPv6 request message. No hex and \\ needed, just like  for example
.BR 000100011234567890abcdef1234 .

.TP
.B hostname = <hostname>
The client hostname. It will be used for dynamic DNS update.

.SS EXTRA ATTRIBUTES

These attributes do not serve for identification of a client but for appropriate address generation.

.TP
.B id = <id>
.B id
has to be a hex number in the range 0-FFFF. The client ID from this directive will be inserted in the address pattern
of category
.B id
instead of the
.B $id$
placeholder.

.TP
.B address = <address> [<address> ...]
Addresses configured here will be sent to a client in addition to the ones it gets due to its class.
Might be useful for some extra static address definitions.

.SH EXAMPLES
The next lines contain some example client definitions:

.nf

[client1]
hostname = client1
mac = 01:01:01:01:01:01
class = valid_client

[client2]
hostname = client2
mac = 02:02:02:02:02:02
class = invalid_client

[client3]
hostname = client3
duid = 000100011234567890abcdef1234
class = valid_client
address = 2001:cb8::babe:1

[client4]
hostname = client4
mac = 04:04:04:04:04:04
id = 1234
class = valid_client

.fi

.SH AUTHOR

Copyright (C) 2012-2014 Henri Wahl <\fBh.wahl@ifw-dresden.de\fP>

.SH LICENSE

This program is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.  See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public
License along with this package; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor,
Boston, MA  02110-1301 USA

On Debian systems, the full text of the GNU General Public
License version 2 can be found in the file
`/usr/share/common-licenses/GPL-2'.

.SH SEE ALSO
.nf
.BR dhcpy6d (8)
.BR dhcpy6d.conf (5)
https://dhcpy6d.ifw-dresden.de
https://github.com/HenriWahl/dhcpy6d
